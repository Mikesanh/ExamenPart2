// <auto-generated />
using System;
using ExamenPart2.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamenPart2.Infrastructure.Migrations
{
    [DbContext(typeof(ExamenPart2DbContext))]
    partial class ExamenPart2DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ExamenPart2.Core.Entities.Album", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("albumName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("artistName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("bought")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("image")
                        .HasColumnType("TEXT");

                    b.Property<double>("price")
                        .HasColumnType("REAL");

                    b.Property<int>("score")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("ExamenPart2.Core.Entities.Song", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("albumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("artistName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("bought")
                        .HasColumnType("INTEGER");

                    b.Property<int>("duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("popularity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("price")
                        .HasColumnType("REAL");

                    b.Property<string>("songName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("albumId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("ExamenPart2.Core.Entities.Song", b =>
                {
                    b.HasOne("ExamenPart2.Core.Entities.Album", null)
                        .WithMany("songs")
                        .HasForeignKey("albumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExamenPart2.Core.Entities.Album", b =>
                {
                    b.Navigation("songs");
                });
#pragma warning restore 612, 618
        }
    }
}
